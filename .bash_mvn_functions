# ***********************************************************************************
# Written by Brett Porter - brett at maven.org
# Based on java functions by Shawn Erickson - shawn at freetimesw.com
#
# Feel free to use as you like but at your own risk :)
#
# The following functions are meant for use with bash shell which is currently the
# default on Mac OS X 10.4 (starting with 10.3 IIRC) unless otherwise configured.
#
# If your shell is already set to use BASH then skip to install steps below.
# If you don't know what shell you are using by default then open a terminal
# window and type "echo $SHELL" and hit return. If it lists "/bin/bash" then
# you are using bash by default. If not you have the option of changing the
# default in terminal, globally for your user, or on demand.
#
# Terminal.app default...
# ...todo...
#
# Globally for user...
# ...todo...
#
# On demand...
# ...todo...
#
# How to "install"...
# ...todo...
#
# ***********************************************************************************

### Maven Environment Functions ###

MVN_VERSIONS_DIRECTORY="/opt"
MVN_COMMANDS_SUBPATH="bin"
MVN_HOME_SUBPATH=""

function availableVersions()
{
	ls -1 $MVN_VERSIONS_DIRECTORY | grep 'maven-[2-9].[0-9]' | sed 's/^.*maven-//g'
}

function listMaven()
{
	local versions=$(availableVersions)
	echo "Available Versions: "$versions
	
	echo "Current `mvn -v`"
}

function setMaven()
{
	local target_maven=""
	local versions=$(availableVersions)

	if [ -z "$@" ]; then
		echo "Usage: setMaven <version>"
		return;
	fi
	
	# Validate that the user requested an available version present on the system

	for version in $versions ; do
		if [ "$version" == "$@" ]; then
			target_version=$@	
		fi
	done

	if [ "$target_version" == "" ]; then
		echo "Unsupported Maven version requested"
		return;
	fi
	
	# If we get here the user asked for a valid version, so configure it

        echo "Switching from `mvn -v`"

	echo "Configuring Shell Environment for Maven "$@

	# First unset any currently set Maven, back to default before doing configuration
	_unsetMaven

        local dir="${MVN_VERSIONS_DIRECTORY}/maven-$@"

        if [ ! -d $dir ]; then
        	# ensure this one takes priority
        	dir="${MVN_VERSIONS_DIRECTORY}/apache-maven-$@"
        fi

	# Generate the paths needed for the version requested
	local jcmd="$dir/${MVN_COMMANDS_SUBPATH}"
	local jhome="$dir/${MVN_HOME_SUBPATH}"

	# We save the original path so we can toggle back if unset
	ORIGINAL_PATH="$PATH"
	PATH="$jcmd:${PATH}"
	
	# We save the original M2_HOME so we can toggle back if unset
	ORIGINAL_M2_HOME="$M2_HOME"
	M2_HOME="$jhome"
	
	# Update command prompt mode tag to note version setting
	CURRENT_MODE_STRING="M$@"

	echo "Current `mvn -v`"
}

function _unsetMaven()
{
	if [ "$CURRENT_MODE_STRING" != "" ]; then
        	PATH="$ORIGINAL_PATH"
		M2_HOME="$ORIGINAL_M2_HOME"
		CURRENT_MODE_STRING=""
	fi
}

function unsetMaven()
{
	echo "Configuring Shell Environment for default Maven"
 	_unsetMaven

	echo "Current `mvn -v`"
}

function debugMaven()
{
	MAVEN_OPTS="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005" mvn $@
}

